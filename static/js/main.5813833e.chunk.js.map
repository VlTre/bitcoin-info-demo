{"version":3,"sources":["components/Header.js","components/Cards.js","components/CurrencyTab.js","components/Footer.js","components/HighchartTheme.js","components/AverageUsdPrice.js","App.js","serviceWorker.js","index.js","components/img/Bitcoin-icon.png"],"names":["Header","react_default","a","createElement","className","src","icon","alt","Component","Cards","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","totalbc","hashestowin","nextretarget","bcperblock","_this2","fetch","then","res","json","parsedRes","setState","CurrencyTab","usd","eur","gbp","rub","jpy","cny","currency","USD","EUR","GBP","RUB","JPY","CNY","Table","striped","bordered","hover","variant","scope","last","buy","sell","symbol","Footer","href","Highcharts","rel","type","document","getElementsByTagName","theme","colors","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","style","fontFamily","plotBorderColor","title","color","textTransform","fontSize","subtitle","xAxis","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","yAxis","tickWidth","tooltip","plotOptions","series","dataLabels","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","fill","rangeSelector","buttonTheme","stroke","states","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","legendBackgroundColor","background2","dataLabelsColor","textColor","contrastTextColor","maskColor","setOptions","AverageUsdPrice","options","text","categories","line","enabled","costs","values","map","cost","Math","round","y","date","Date","x","name","data","highcharts_react_min_default","highcharts","App","components_Header","components_AverageUsdPrice","components_CurrencyTab","components_Cards","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5813833e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport icon from './img/Bitcoin-icon.png';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <header className={'header'}>\r\n                <img src={icon} alt=\"icon\" className={'logo'}/>\r\n                <p className={'brand'}>Bitcoin Info</p>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Cards extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            totalbc: '',\r\n            hashestowin: '',\r\n            nextretarget: '',\r\n            bcperblock: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const urlTotalbc = 'https://blockchain.info/q/totalbc';\r\n        const urlHashtowin = 'https://blockchain.info/q/hashestowin';\r\n        const urlNextretarget = 'https://blockchain.info/q/nextretarget';\r\n        const urlBcperblock = 'https://blockchain.info/q/bcperblock';\r\n        fetch(urlTotalbc)\r\n            .then(res=>res.json())\r\n            .then(parsedRes=>{\r\n                this.setState({\r\n                    totalbc: parsedRes\r\n                })\r\n            });\r\n        fetch(urlHashtowin)\r\n            .then(res=>res.json())\r\n            .then(parsedRes=>{\r\n                this.setState({\r\n                    hashestowin: parsedRes\r\n                })\r\n            });\r\n        fetch(urlNextretarget)\r\n            .then(res=>res.json())\r\n            .then(parsedRes=>{\r\n                this.setState({\r\n                    nextretarget: parsedRes\r\n                })\r\n            });\r\n        fetch(urlBcperblock)\r\n            .then(res=>res.json())\r\n            .then(parsedRes=>{\r\n                this.setState({\r\n                    bcperblock: parsedRes\r\n                })\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'cards container'}>\r\n                <div className={'card'}> <p className={'cardDesc'}>Total Bitcoins in circulation (delayed by up to 1 hour)</p> <p className={'cardInfo'}>{this.state.totalbc}</p> </div>\r\n                <div className={'card'}> <p className={'cardDesc'}>Block height of the next difficulty retarget</p> <p className={'cardInfo'}>{this.state.nextretarget}</p> </div>\r\n                <div className={'card'}> <p className={'cardDesc'}>Average number of hash attempts needed to solve a block</p > <p className={'cardInfo'}>{this.state.hashestowin}</p> </div>\r\n                <div className={'card'}> <p className={'cardDesc'}>Current block reward in BTC</p> <p className={'cardInfo'}>{this.state.bcperblock}</p> </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cards;\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass CurrencyTab extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            usd: {},\r\n            eur: {},\r\n            gbp: {},\r\n            rub: {},\r\n            jpy: {},\r\n            cny: {},\r\n        }\r\n    }\r\n     componentDidMount() {\r\n        const url = 'https://blockchain.info/ticker';\r\n        fetch(url)\r\n            .then(res=> res.json())\r\n            .then(currency =>{\r\n                this.setState({\r\n                    usd: currency.USD,\r\n                    eur: currency.EUR,\r\n                    gbp: currency.GBP,\r\n                    rub: currency.RUB,\r\n                    jpy: currency.JPY,\r\n                    cny: currency.CNY,\r\n                })})\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n\r\n            <div className={'tabContainer container'}>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">Last prise</th>\r\n                        <th scope=\"col\">Buy</th>\r\n                        <th scope=\"col\">Sell</th>\r\n                        <th scope=\"col\">Symbol</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>USD</td>\r\n                        <td>{this.state.usd.last}</td>\r\n                        <td>{this.state.usd.buy}</td>\r\n                        <td>{this.state.usd.sell}</td>\r\n                        <td>{this.state.usd.symbol}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>EUR</td>\r\n                        <td>{this.state.eur.last}</td>\r\n                        <td>{this.state.eur.buy}</td>\r\n                        <td>{this.state.eur.sell}</td>\r\n                        <td>{this.state.eur.symbol}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>GBP</td>\r\n                        <td>{this.state.gbp.last}</td>\r\n                        <td>{this.state.gbp.buy}</td>\r\n                        <td>{this.state.gbp.sell}</td>\r\n                        <td>{this.state.gbp.symbol}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>RUB</td>\r\n                        <td>{this.state.rub.last}</td>\r\n                        <td>{this.state.rub.buy}</td>\r\n                        <td>{this.state.rub.sell}</td>\r\n                        <td>{this.state.rub.symbol}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>JPY</td>\r\n                        <td>{this.state.jpy.last}</td>\r\n                        <td>{this.state.jpy.buy}</td>\r\n                        <td>{this.state.jpy.sell}</td>\r\n                        <td>{this.state.jpy.symbol}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>CNY</td>\r\n                        <td>{this.state.cny.last}</td>\r\n                        <td>{this.state.cny.buy}</td>\r\n                        <td>{this.state.cny.sell}</td>\r\n                        <td>{this.state.cny.symbol}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrencyTab;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className={\"footer container\"}>\r\n        <p>\r\n          API:\r\n          <a href=\"https://www.blockchain.com/api\">\r\n            https://www.blockchain.com/api\r\n          </a>\r\n        </p>\r\n        <p>\r\n\r\n          View source:\r\n          <a href=\"https://github.com/VlTre/Bitcoin-ticker\">\r\n            https://github.com/VlTre/Bitcoin-ticker\r\n          </a>{\" \"}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import Highcharts from \"highcharts\";\r\n\r\nHighcharts.createElement('link', {\r\n    rel: 'stylesheet',\r\n    type: 'text/css'\r\n}, null, document.getElementsByTagName('head')[0]);\r\n\r\nHighcharts.theme = {\r\n    colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066',\r\n        '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\r\n    chart: {\r\n        backgroundColor: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\r\n            stops: [\r\n                [0, '#343a40'],\r\n                \r\n            ]\r\n        },\r\n        style: {\r\n            fontFamily: '\\'Unica One\\', sans-serif'\r\n        },\r\n        plotBorderColor: '#606063'\r\n    },\r\n    title: {\r\n        style: {\r\n            color: '#E0E0E3',\r\n            textTransform: 'uppercase',\r\n            fontSize: '20px'\r\n        }\r\n    },\r\n    subtitle: {\r\n        style: {\r\n            color: '#E0E0E3',\r\n            textTransform: 'uppercase'\r\n        }\r\n    },\r\n    xAxis: {\r\n        gridLineColor: '#707073',\r\n        labels: {\r\n            style: {\r\n                color: '#E0E0E3'\r\n            }\r\n        },\r\n        lineColor: '#707073',\r\n        minorGridLineColor: '#505053',\r\n        tickColor: '#707073',\r\n        title: {\r\n            style: {\r\n                color: '#A0A0A3'\r\n\r\n            }\r\n        }\r\n    },\r\n    yAxis: {\r\n        gridLineColor: '#707073',\r\n        labels: {\r\n            style: {\r\n                color: '#E0E0E3'\r\n            }\r\n        },\r\n        lineColor: '#707073',\r\n        minorGridLineColor: '#505053',\r\n        tickColor: '#707073',\r\n        tickWidth: 1,\r\n        title: {\r\n            style: {\r\n                color: '#A0A0A3'\r\n            }\r\n        }\r\n    },\r\n    tooltip: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\r\n        style: {\r\n            color: '#F0F0F0'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        series: {\r\n            dataLabels: {\r\n                color: '#B0B0B3'\r\n            },\r\n            marker: {\r\n                lineColor: '#333'\r\n            }\r\n        },\r\n        boxplot: {\r\n            fillColor: '#505053'\r\n        },\r\n        candlestick: {\r\n            lineColor: 'white'\r\n        },\r\n        errorbar: {\r\n            color: 'white'\r\n        }\r\n    },\r\n    legend: {\r\n        itemStyle: {\r\n            color: '#E0E0E3'\r\n        },\r\n        itemHoverStyle: {\r\n            color: '#FFF'\r\n        },\r\n        itemHiddenStyle: {\r\n            color: '#606063'\r\n        }\r\n    },\r\n    credits: {\r\n        style: {\r\n            color: '#666'\r\n        }\r\n    },\r\n    labels: {\r\n        style: {\r\n            color: '#707073'\r\n        }\r\n    },\r\n\r\n    drilldown: {\r\n        activeAxisLabelStyle: {\r\n            color: '#F0F0F3'\r\n        },\r\n        activeDataLabelStyle: {\r\n            color: '#F0F0F3'\r\n        }\r\n    },\r\n\r\n    navigation: {\r\n        buttonOptions: {\r\n            symbolStroke: '#DDDDDD',\r\n            theme: {\r\n                fill: '#505053'\r\n            }\r\n        }\r\n    },\r\n\r\n    // scroll charts\r\n    rangeSelector: {\r\n        buttonTheme: {\r\n            fill: '#505053',\r\n            stroke: '#000000',\r\n            style: {\r\n                color: '#CCC'\r\n            },\r\n            states: {\r\n                hover: {\r\n                    fill: '#707073',\r\n                    stroke: '#000000',\r\n                    style: {\r\n                        color: 'white'\r\n                    }\r\n                },\r\n                select: {\r\n                    fill: '#000003',\r\n                    stroke: '#000000',\r\n                    style: {\r\n                        color: 'white'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        inputBoxBorderColor: '#505053',\r\n        inputStyle: {\r\n            backgroundColor: '#333',\r\n            color: 'silver'\r\n        },\r\n        labelStyle: {\r\n            color: 'silver'\r\n        }\r\n    },\r\n\r\n    navigator: {\r\n        handles: {\r\n            backgroundColor: '#666',\r\n            borderColor: '#AAA'\r\n        },\r\n        outlineColor: '#CCC',\r\n        maskFill: 'rgba(255,255,255,0.1)',\r\n        series: {\r\n            color: '#7798BF',\r\n            lineColor: '#A6C7ED'\r\n        },\r\n        xAxis: {\r\n            gridLineColor: '#505053'\r\n        }\r\n    },\r\n\r\n    scrollbar: {\r\n        barBackgroundColor: '#808083',\r\n        barBorderColor: '#808083',\r\n        buttonArrowColor: '#CCC',\r\n        buttonBackgroundColor: '#606063',\r\n        buttonBorderColor: '#606063',\r\n        rifleColor: '#FFF',\r\n        trackBackgroundColor: '#404043',\r\n        trackBorderColor: '#404043'\r\n    },\r\n\r\n    // special colors for some of the\r\n    legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    background2: '#505053',\r\n    dataLabelsColor: '#B0B0B3',\r\n    textColor: '#C0C0C0',\r\n    contrastTextColor: '#F0F0F3',\r\n    maskColor: 'rgba(255,255,255,0.3)'\r\n};\r\n\r\n// Apply the theme\r\nHighcharts.setOptions(Highcharts.theme);","import React, { Component } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport HichartTheme from \"./HighchartTheme\";\r\n\r\nclass AverageUsdPrice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          type: \"line\"\r\n        },\r\n        title: {\r\n          text: \"Monthly Average USD Price\"\r\n        },\r\n        xAxis: {\r\n          categories: []\r\n        },\r\n        yAxis: {\r\n          title: {\r\n            text: \"Price in USD\"\r\n          }\r\n        },\r\n        plotOptions: {\r\n          line: {\r\n            dataLabels: {\r\n              enabled: true\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n\r\n        ]\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url =\r\n      \"https://api.blockchain.info/charts/market-price?timespan=30days&format=json&cors=true\";\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(parsedRes => {\r\n        const costs = parsedRes.values.map(cost => Math.round(cost.y));\r\n        const date = parsedRes.values.map(date => new Date(date.x * 1000));\r\n          this.setState({\r\n              options: {\r\n                  categories: date,\r\n                  series: [{\r\n                      name: \"\",\r\n                      data: costs\r\n                  }]\r\n              }\r\n          });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className={'chart container'}>\r\n            <HighchartsReact highcharts={Highcharts} options={this.state.options} >    </HighchartsReact>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default AverageUsdPrice;\r\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Cards from './components/Cards';\nimport CurrencyTab from './components/CurrencyTab';\nimport Footer from './components/Footer';\nimport AverageUsdPrice from './components/AverageUsdPrice';\n\nimport './App.css';\n\nclass App extends Component{\n\n  render(){\n    return(\n        <div className={'App'}>\n            <Header/>\n            <AverageUsdPrice/>\n            <CurrencyTab/>\n            <Cards/>\n            <Footer/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Bitcoin-icon.a5630cf1.png\";"],"sourceRoot":""}